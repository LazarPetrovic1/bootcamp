1. BIOS
Device boot order
UEFI vs Legacy
Jeger - 15577800

Bootable options: e to edit in GRUB
linux line & initrd || initramfs
Posle root filesys attachment, init program executed, w/ PID of 1
ps aux | head

sysvinit - first commercial unix os
systemd - API and concurrent parallel processing during boot time
upstart - developed by Ubuntu

dmesg (-T => gives the date) - read all kernel msgs since boot time

sudo loadkeys <jezik>

udev
Device manager
Low lvl access to linux device tree
Handles user space events like loading firmware
Mounted to /dev on startup

dbus
Inter process communication mechanism
Framework that allows processes to talk to each other
Secure and reliable
Provides high lvl object oriented programming interface
Can create rules

sysfs
Virtual filesystem
Presents information about various kernel subsystems: hardware devices and drivers eg
It's mounted to /sys

procfs
Similar to sysfs
Presents information about processes
Presents information about system information
Mounted to /proc
Can be used to interface with the kernel
Parameters can be changed on the fly

lsmod - see all modules in use
rmmod - remove a module on the fly
modprobe - add a module on the fly
lspci - lists all pci devices

-- __ ** Run levels, boot targets and how to shutdown and reboot a system ** __ --

run lvs:
0 - halt or shutdown the system
1 - single user mode - root password changing or recovery mode
2 - multi-user mode without networking
3 - normal boot
4 - unused/customizable
5 - run lv 3 + GUI display manager
6 - reboot

script execution

sysvinit way: /etc/inittab
systemd way: /etc/systemd/system; /usr/lib/systemd/system

systemd targets:

|   run lv  |  systemd target   |
| --------- | ----------------- |
|    -0-    | poweroff.target   |
|    -1-    | rescue.target     |
|  -2- -4-  | multi-user.target |
|    -3-    | multi-user.target |
|    -5-    | graphical.target  |
|    -6-    | reboot.target     |
| emergency | emergency.target  |

init || telinit - change runlevel

init 0 - shutdown
init 6 - reboot
wall - write message to all users
systemctl - all of the units that systemd is running
sudo systemctl status <what>.target - shows status of <what>
sudo systemctl stop <what>.target - kills <what> processes
sudo systemctl start <what>.target - starts <what> processes

-- __ ** Design hard disk layout ** __ --

Hard disk stuff

1. /usr - user binaries
2. /home - place to store own files
3. /boot - stuff for boot
4. /var - variable data
5. /tmp - temporary directory

Partitions

Dividing storage into separate pieces
- Allows dual booting
- Separation of files
- Data organization
- System protection

Swap partition - if RAM is full, this is used in its stead; cannot be accessed by a user

LVM - Logical volume manager
* Can split disks into pools (physical extents, PEs or pools)
* Create partitions from pools
* Can grow or shrink partitions depending on the circumstance when the need arises

GRUB commands
grub-probe --version - Gives grub version
/boot contains /grub
menu.lst, grub.conf or grub.cfg is the grub file (*NEVER EDIT*)
/etc/grub.d - scripts used to generate the grub files
/etc/grub/defaults - contains grub's defaults (CAN EDIT)
which - tells you where the command is running from
update-grub - updates grub config
grub-install - installs grub on another partition (e.g /dev)

Libraries
// write file to a disk
// display something on screen
// send files over networks

Linking
# static linking - library in the application
# dynamic linking - the same library can be shared between links

/etc/ls.so.conf/*.conf - shared libraries
ldconfig - configure dynamic linker run-time bindings

Environment variables example
export LD_LIBRARY_PATH=/home/<username>
echo $LD_LIBRARY_PATH - prints what it is

ldd - shows what libraries the argument is linked to

dpkg - Debian package manager
apt - advanced packaging tool

dpkg -l | less - lists installed packages
dpkg -i <packagename> - installs package

/etc/apt/sources.list - txtfile with urls which apt checks for installations
apt dist-upgrade - deletes unneeded and updates needed

RPM and YUM packages

rpm - RedHat package manager like dpgk
yum - yellowdog updater modified, like apt

sudo yum update - updates centos
yumdownloader - used before yum

1. rpm -qf /folder/item - query format; tells what package it belongs to
2. rename the file sudo mv...
3. rpm --verify <daddy_package_name>
4. rename it back
5. sudo rpm -Va
6. / in man file allows searching

zypper and dnf

zypper - used in opensuse

zypper repos - lists available repositories and those enabled
sudo zypper refresh - checks if all packages are up to date
sudo zypper in git - installs git
sudo zypper remove --clean-deps git - removes git and dependencies

dnf - can be installed to centos

dnf info get - looks at the details of the git package (might update stuff first)
sudo dnf list - compiles a long list of available packages
dnf list installed - lists installed
dnf check-update - checks which packages to update
sudo dnf install git - install the git package
sudo dnf remove git - removes the git package

Linux as a virtualization guest

Advantages:
* Multiple OS on the same computer
* Extra hardware not necessary
* Entire machines can be cloned, backed up and easily restored
* Easy to manage and maintain
* Protect the host machine

Disadvantages:
* Less efficient due to accessing hardware indirectly
* Performance may be hindered by the host

Containers - Docker Kubernetes
Computer > container > application instead of Computer > hypervisor > different VMs with apps

Cloud computing - AWS, Microsoft Azure, Google Cloud
The cloud > networking > storage service instead of managing own servers

cloud-init + docker image
* Cloud instance initialization
* A set of scripts that are executed when an instance is started
* Applies user data to your instances automatically
* Works with many popular operating systems
* Works on almost all public clouds
	- AWS
	- Microsoft Azure
	- Google Cloud Platform
	- Rackspace, IBM, Alibaba, CloudStack, Bigstep, Hetzner, Joyent

-- __ ** THE COMMAND LINE ** __ --
bash is the most often/widely used
the other ones are zsh ksh sh
env - gets environment variables (temporary)
history - shows the whole history of the current terminal window

manuals - there are 9 different types

man <type> <page>
man time => TIME(1)
man 3 time => TIME(3)
manpath - where the man pages are stored
uname - system information

Quoting, type and which

Quoting stuff we don't want to do anything special
echo ls ; data => does not work
quoted: echo 'ls ; date' => works
echo ls \; date => escaping the character also works

type: tells you what type the command is

type type => type is a shell builtin
type ls => ls is aliased to `ls --color=auto`
type time => time is a shell keyword
type less => less is /usr/bin/less

which: like type, but tells you where the command is located

Process text streams
cat - used to concatenate or print to screen
cut - remove sections from each line of files
(cut -c<num> <filename> - return the <num>th item from every line of file)
(cut -c<num1>-<num2> <filename> - return the items between <num1> and <num2> from every line of file)

expand - turn tab into 8 spaces
unexpand - turn every group of 8 spaces into a tab
wc - newline count, word count and byte count
wc -l => just the line count
fmt - splits the file into multiple readable lines

head - gives the top (default 10) lines of the text file (-n changes num of lines)
tail - gives the bottom (default 10) lines of the text file (-n changes num of lines)
join - joins 2 texts by correlating lines
less - page by page
nl - adds line numbers to the files
od - dumps file in octal form
paste - same as join but combines any line regardless of matching fields, separated by a tab
pr - formats the file with date, filename and page number at the top
sed - complex operations with text (-e flag allows regular expressions) s (substitution command of sed)
sed in action: echo day | sed -e s/day/night/
sort - sorts by alphabetical order
split - splits the file into multiple files (~ 1000 lines each)
tr - translates or deletes characters in a text (-d flags deletes)
uniq - puts repeating lines adjacent of each other

cat and sums

* cats *
bzcat - decompress compressed files with bzip2 alg
bunzip2 - returns the previous file (decompressed)
zcat - bzcat for gzip
gunzip - bunzip2 for gzip
xzcat - bzcat for xz
unxz - bunzip2 for xz

* sums *
md5sum
sha256sum
sha512sum

file - gives information about the file
tar - creates a tar archive
cvf - create verbose filename (most common options for tar)
zx - zipped extract
dd - used for duplication (good for iso replacement - Ubuntu.dd e.g)
[DD often used as: dd if=<input> of=<output> {some options}]
xxd - hex dump

Streams, pipes and redirects

1. STDIN - 0
2. STDOUT - 1
3. STDERR - 2

> - redirects all the text before it to a file, [overwrite]
>> - appends to a file redirected to [append]
< - redirects input
& - copy to another file descriptor
xargs - .forEach(x => ...)
tee - copy input to each file

Processes

ping - pings a computer and gives back time
Ctrl + z || bg - background
fg - foreground
nohup - does not show the output of an executed command

ping google.com & - & in the end backgrounds the operation, but the output can still be seen 

kill(all) - kills a process

Kill signals

SIGINT - interruption signal - Ctrl + C
SIGKILL - kill signal
SIGSTOP - pause signal - Ctrl + Z
SIGTERM - termination signal
top - proto task manager
free - shows info about memory
watch (-n <num>) - run commands periodically (every <num> seconds)
tmux - terminal multiplexer (similar to screen)
tmux Ctrl + B - sends a command to terminal
tmux shift + 5 - splits the screen vertically (like atom files when dragged)
Ctrl + b && Ctrl + c - makes a new terminal window
Ctrl + 0 - returns to the first terminal [with index 0]

Modify process execution priorities

Nice value determines how much CPU time a process will get (-20 - highest priority, 19 - lowest priority)

usage: nice <val> <command>

renice: changes nice value; usage: sudo renice <newval> -p <PID>

Regex & symbols

regex
Sequence of symbols and chars
Express a string or pattern
Searched for within text

Symbol

| - or => gray|grey
() - grouping => gr(a|e)y
$ - EOL => end of line
^ - SOL => start of line
. - any character

Quantifiers

? - 1 or 0 occurrence(s) of the preceding element => colou?r
* - 0 or more occurrences => ab*c === ac, abc, abbc, abbbc, ...
+ - 1 or more occurrences of the preceding element => ab+c === abc, abbc, abbbc, ...
{n} - the preceeding item is matched exactly n times
{min,} - at least min times a match
{min, max} - between min and max

grep - globally search for a regular expression and print
There are grep, egrep, fgrep
egrep = grep -E

Sed can be used with regex

Vi

1. Editing mode
2. Command mode
3. Visual mode

Vim shortcuts:
h - move left
j - move down
k - move up
l - move right

/:text: - search for :text: in file
n after search - next found item
?init - look for text backwards

dd - completely delete the line
p - paste the line after the cursor line
yy - copy the line
:num:<command> - do a command num times
x - delete characters
:<number> - colon number: go to line
$ - go to line end
^ - go to line start
i - go into insert mode
a - go into append mode
esc - leave the editing mode
o - editing mode + newline

:wq - save and exit
shift + zz - save and exit
:q - quit
:q!a - quit w/o saving
:w - save progress

Other common editors
1. emacs
2. nano
3. vim

$EDITOR is the default editor environment variable

lsblk - see the disks

sudo fdisk /<path> - creates a partition of a disk
sudo parted /<path> - creates a partition

mkpart - parted make partition command

Filesystem
ext
ext2 - dev'd in 1993
ext3 - dev'd in 2001
ext4 - dev'd in 2008
reiserfs - 2001
btrfs - binary tree
____________________________________
mkfs - make filesystem

with sudo

Mount
mkdir
mount /mountee /mounter
umount /mounter
mkswap /mountee
swapon /mountee


iNodes
* Describe file or directory
* Stores attributes
	* Last time of change/access/modification
	* Owner/permission data
* Stores Disk Location
* Directory is a list of names assigned to iNodes
	* Contains entry for itself, its parent and its children
* You can run out of iNodes

ls -i <file> - lets you see the iNode
df -i - also iNodes
du - also iNodes
[sudo] du -h [--max-depth=1] /<path> - size and files in this folder

fsck - check or repair any problems it may find with the filesystem

Misc with fs
dumpe2fs
tune2fs

xfs_db /<path> - examines or debugs

cat /proc/self/mounts - same as mount command
/etc/fstab - mountable
blkid - lists filesystems with ID

Manage disk quota
defaults, usrquota
sudo quotacheck -avugc
User sees only their stuff or all if root.
edquota -u [username] - opens default editor with quota info
repquota /<path> - shows used quotas

Permissions and ownership

- rwx rw- r--
- => file: d = directory, l = link
rwx => user permissions
rw- => group permissions
r-- => other permissions

chmod u+[options: r,w,x, rw,rx, xw, rwx] <filename>

Numerical presentation:
--- => 000 => 0
--x => 001 => 1
-w- => 020 => 2
-wx => 021 => 3
-r- => 040 => 4
r-x => 401 => 5
rw- => 420 => 6
rwx => 421 => 7

setuid/setgid - run the program as the owner (+s in letters, so rwxs)
sticky bit - prevents the user from deleting a folder (+t) even with permission

0 => nothing set --- --- ---
1 => sticky bit set --- --- --t
2 => setgid set --- --s ---
3 => setgid & sticky bit --- --s --t
4 => setuid --s --- ---
5 => setuid & sticky bit --s --- --t
6 => setuid & setgid --s --s ---
7 => all 3 set --s --s --t

chmod 1764 filename

chown & chgrp

chown/chgrp <username> <filename>
chown uname:grp <file>

umask - see default permissions and supressed permissions
umask 0044 - changes umask defaults

-- __ ** Links ** __ --

* Files are represented by iNode
* Files are only deleted when all links to an iNode are removed
* A hard link is a link to another file's iNode and it can only occur on the same filesystem
* A solf (symbolic) link is a link to another filename, ant it can occur across different filesystems


ln <file to link> <file to link with> - links the first file to the second (this is a hard link)
ln -s (symbolic link) /etc/ blah - makes a symbolic link between etc and blah
_______________________________________________________________________________________________________

Find files and place them in the correct place

which - find the source exec
type - tells what type of command the word is
whereis - locates the binary, source and man page if exists
locate - builds a db of fs and can be queried directly
updatedb - updates the previous command database

Configure terminal

configuration files
* Allow us to change how our shell works
* Define path, environment variables
* Set up aliases
* System wide - /etc/bash.bashrc & /etc/profile
* Local ~/.bash_profile, ~/.bashrc & ~/.profile
* Action specific ~/.bash_login & ~/.bash_logout

set -o noclobber - cannot overwrite files
set -o xtrace - get the command back the way bash interprets it

Customize and write simple scripts

#! - hash bang

* First line of a script
* provides the full path to the interpreter

if/else

if [condition]
then
	# stuff to do
else
	# other stuff to do
fi


for

for VARIABLE in 1 2 3 4 5
do
	# stuff
	# stuff
done

seq <num> - print a sequence of numbers

for VAR in `seq 5` # backticks important
# other stuff

var = 'hi'

while

while condition 
do
# stuff
done

read - captures user input

echo 'Enter your name'
read name
echo "Hello, $name!"

functions

# No return
function myfunc {
	echo $1 $2 $3
}

# Return value
check: echo $?

Chained commands

&& - and
|| - or
| - pipe
; - execute the next command regardless of the outcome

ping -c1 google.com && echo "Google is alive!" || echo "Google is dead."
# if ping works, the first echo will come through, else the second will

-- __ ** SQL data management ** __ --

Structured query language with numeric IDs

commands
INSERT - put a row of data in db
UPDATE - updates a row of data in db
SELECT - selects a row of data in a db based on conditions
DELETE - delete a row of data in db
FROM - selects the table you are selecting the data from
WHERE - defines the SELECT condition
GROUP BY - data grouping
ORDER BY - data ordering
JOIN - joins 2 tables which share a column of data

SHOW DATABASES - shows dbs
CREATE DATABASE <name> - makes db
USE <db> - uses db
SHOW TABLES - shows tables
CREATE TABLE <name> (<stuff>) - creates a table
DESCRIBE <db> - shows db structure

/etc/X11/xorg.conf - refering to this file

Wayland
* Simple replacement for X
* Protocol for a compositor
* Weston reference implementation


Display managers
* XDM
* GDM (Gnome)
* KDM
* LightDM

sudo systemctl set-default multi-user.target

Remote sessions

tightvncserver - connect to the IP address with a password

Accessibility

Gnome allows screen keyboard
GOK - Gnome Onscreen Keyboard

User and group account management and relates system files

* /etc/passwd - username, encrypted password, userid, groupid (primary), comment/info field, homedir, shell of user
* /etc/shadow - username, password, number of days since 1.1.1970 since the pass was changed, minimum nr of days required between 2 pass changes, 0 and 5 nines means the pass won't expire (when it expires is the field), days before the pass will expire - wearning delay
* /etc/skel - skeleton directory - base for user

Adding

useradd, adduser (can be used to add to groups)
groupadd, addgroup
chage - for password changeing
userdel, groupdel

Automating the system

* at - custom shell for jobs at different time
* atq - checks jobs
* atrm <JOB ID> - remove job
* atd - run jobs queued for execution

`
$ at 4 PM
at> ps aux
at> <Ctrl + D>
`

/etc/at.deny - list of blackilisted users
/etc/at.allow - list of users who can run at

* crontab -e (prompts: minute, hour, month, day of week, user, command)
* files: /etc/cron.daily/weekly/monthly
* /etc/cron.allow
* anacron: /etc/anacrontab - runs immediately

Unit use

systemctl list-timers
/lib/systemd/system/apt-daily.timer
systemd-run --on-active=60 /bin/touch /tmp/file.txt 

-- __ ** Localization and internationalization ** __ --

date - date
timezone - timezone
/etc/localtime - symlink to /usr/share/zoneinfo/<country>/<city>
tzselect - select a timezone
timedatectl - query + change system clock
locale - formatted times and countries
iconv - convert between different character encodings (shows supported)
file - gives back the encoding

/etc/group - group passwords stored

getent - Which command can be used to query certain database files on your system, such as /etc/services? 
batch - Which command will let you run commands based on your system load? batch will run your specified commands when your system load is lower than a specified number, defaulting to 1.5. 
anacron - Which application will run your scheduled jobs even if your machine was shut down when it was scheduled to run? anacron will run your scheduled jobs a certain amount of time after you turn your machine on if it was off when the job was scheduled to run. 
group - Where are encrypted group passwords stored? While rarely used, a group can have a password. They are stored in /etc/group. 
at - Which command will let you run another command at a specific time? 'at' is correct; although cron *will* run commands at a specific time, cron isn't a command. It's a daemon. 
/etc/skel - Which directory is copied to a new user's home directory when a new user iscreated with adduser? /etc/skel is copied to a new users home directory when created with the adduser command. 
chage - Which command can change user password expiry information? chage is used to change user password expiry information. 
/etc/shadow - Where are encrypted user passwords stored? Encrypted passwords are stored in /etc/shadow. That's why only root can access it. 
LC_ALL - Which LC variable shown by the 'locale' command will override all other LC variables? If it is set, LC_ALL will override all locales shown when you type locale. 


			-- __ ++ ** // Essential system services \\ ** ++ __ --


* Keep your computers synchronized and accurate
* Helps with scheduled jobs e.g Backups
* Helps with caching and logging
* Helps identify when issues may occur
* Time-dependent applications require very accurate clocks

date +%s // UNIX time

ntpdate query remote time server
ntp - ensures computer always has the right time

pool.ntp.org
hwclock - hardware clock
sudo hwclock --systohc --localtime
/etc/adjtime - type of time UTC/LOCAL/...

chrony and timedatectl

__________________________________________________________________
chrony - versatile implementation of Network Time Protocol (ntp)  |
can use reference clocks like a GPS receiver                      |
manual input using a wristwatch and keyboard                      |
designed to perform well in a wide range of conditions            |
	* intermittent network connections                        |
	* changing temperatures                                   |
	* virtual machines                                        |
__________________________________________________________________|

chronyc - CLI program
chronyc tracking (see time info)
chronyc sources (get the sources list)
timedatectl - gives local, universat, rtc time, timezone and more
sudo timedatectl set-time "YYYY-MM-DD HH:MM:SS" // not allowed when time synchronization is enabled
timedatectl list-timezones - lists the timezones
timedatectl set-timezone <timezone name>
timedatectl set-ntp false/true - use the ntp or not

System logging

* syslog
	- Message logging standard
	- Separates
		// Message generator
		// Message storage
		// Message reporter
		// Message analyser
	- Each message has a facility code indicating:
		// Software type
		// Severity label
	- Used for:
		// System management
		// Security auditing
		// General information
		// Analysis
		// Debugging messages
	rsyslogd is used
	lives in /etc/rsyslog.d
	logs found /var/log/syslog
	/etc/logrotate.conf - additional information and settings about logs

* journalctl
	- Queries and displays messages from the systemd journal
	- with -b - see messages from this boot
	- with -<num> - see logs from <num> boots ago
	- with -u <service> - logs from services

* rsyslog is the system logging implementation on the system
	- can be configured to receive logs from systemd-journald

* systemd-cat - manually send logs to systemd-journal with systemd-cat

Mail Transfer Agent basics - MTA
* sendmail
* postfix
* qmail
* exim

Aliases
ceo@domain.com => ryan@domain.com
staff@domain.com => will forward to anyone in staff (with @domain.com)


Mutt - m to prompt to & subject fields, $ refreshes the window
newaliases - rebuilds the aliases

.forward - file in home directory; where to forward the mails
mailq - the mail queue

Printers and printing in Linux

CUPS - common UNIX printing system
The new standard
Manages print jobs and queues
Provides networking printing
Supports a very large range of printers
Provides web-based configuration and administration tool

install cups and cups-bsd
/etc/cups/cupsd.conf

lpr - printing command
cupsdisable <printer name> - disables the printer
cupsenable <printer name> - the opposite of the previous command

logrotate - Which command will ensure your disks don't fill up by deleting old logs? logrotate will rotate your logs and will delete logs if they're old enough. 
date +%s - How can you view the date in Unix time? date +%s will show the date in Unix time. 
journalctl - Which command will let you view all systemd journal log messages? journalctl will show you all systemd journal logs. 
newaliases - How do you rebuild the email alias database? The newaliases command will rebuilt the email alias database. 
hwclock - How can you query the hardware clock? hwclock will query your hardware clock. Be sure to run it as sudo! 
missingok - Which option will make logrotate ignore a file if it's missing? missingok will make logrotate simply move on to the next file if the file is missing and it will not report an error. 
cupsenable - Which command will re-enable a printer that has been disabled in CUPS? cupsenable <printername> will re-enable a printer that was disabled with cupsdisable. 
1. 1. 1970 - When was the unixtime epoch? unixtime's epoch was January 1, 1970. 
ntp-simple daemon or ntpd - What is the name of the daemon which will keep your clock accurate? ntpd will run in the background and keep your system clock accurate. 
syslog - What system manages all of the logging in Linux? syslog is used to manage all logging. 

	     -- __ ++ ** // ?? FUNDAMENTALS OF INTERNET PROTOCOLS ?? \\ ** ++ __ --

* Number assigned to your computer
* Allows other computers to communicate with yours
* Public and private IP addresses are available
* IPv4 and IPv6

IPv4
	* 32 bit addresses
	* max 2^32 addresses (~ 4.3B)
	* contains 4 octets
	* Router > Router > Router > Your network's router > Your computer
	* Needs:
		- Network address (e.g 172.16.254)
		- Host address (e.g 0.0.0.1)
		- Subnet mask (255.255.255.0) - turn on network bit and turn off host bits
	* CIDR - classless interdomain routing (method of splitting IP addresses)
	* 172.16.254.0/24 - means there are only 24 IP addresses in this network (24 of 32 bits are used)

IPv6
	* 128 bit addresses
	* allows for over to 340 undecillion (~ 340 * 10^36) addresses
	* leading zeroes in 4 bit groups can be omitted
	* consecutive groups of zeroes can be replaced with double colon (::)
	* 2001:0db8:0000:0000:0000:ff00:0042:8329 becomes 2001:db8::ff00:42:8329

When a PC is added machines on the network try to determine its MAC or hardware address; needed before sending anything

IPv4 uses ARP - address resolution protocol
	* Determines IP via DNS
	* Sends packet to all computers asking for Hardware/MAC address
	* Computer responds from known IP with its Hardware/MAC address

IPv6 uses Neighbourhood discovery
	* Improvements over ARP
	* Unreachability detection
	* Improves robustness of packet delivery

Private IPs
	* Uses private IP address space
	* Not allocated to any specific organization
	* Can be used by anyone anytime they want
	* NAT or proxy are required to connect to the Internet

Packet types;
	* TCP
		- Transmission control protocol
		- Connection oriented protocol
		- Siuted for high reliability applications
	* UDP
		- User datagram protocol
		- Connectionless protocol
		- Suited for applications that need fast but stateless transmission (e.g streaming videos)
	* ICMP
		- Internet control message protocol
		- Used by network devices
		- Send error messages and operational information

PORTS

__________________
|		 |
| PORT | SERVICE |
| ---- | ------- |
|  21  |   FTP   |
|  22  |   SSH   |
|  23  |  Telnet |
|  25  |   SMTP  |
|  53  |   DNS   |
|  80  |   HTTP  |
| 110  |   POP3  |
| 143  |   IMAP  |
| 443  |  HTTPS  |
|________________|

/etc/services

Ports up to 1024 are privileged (root only)
